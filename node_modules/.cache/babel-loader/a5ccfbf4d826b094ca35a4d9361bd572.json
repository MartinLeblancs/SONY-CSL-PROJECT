{"ast":null,"code":"var core = require('../../core'); // @see https://github.com/substack/brfs/issues/25\n\n\nvar fs = require('fs');\n/**\n * The NormalMapFilter class uses the pixel values from the specified texture (called the normal map)\n * to project lighting onto an object.\n *\n * @class\n * @extends PIXI.AbstractFilter\n * @memberof PIXI.filters\n * @param texture {Texture} The texture used for the normal map, must be power of 2 texture at the moment\n */\n\n\nfunction NormalMapFilter(texture) {\n  core.AbstractFilter.call(this, // vertex shader\n  null, // fragment shader\n  fs.readFileSync(__dirname + '/normalMap.frag', 'utf8'), // custom uniforms\n  {\n    displacementMap: {\n      type: 'sampler2D',\n      value: texture\n    },\n    scale: {\n      type: '2f',\n      value: {\n        x: 15,\n        y: 15\n      }\n    },\n    offset: {\n      type: '2f',\n      value: {\n        x: 0,\n        y: 0\n      }\n    },\n    mapDimensions: {\n      type: '2f',\n      value: {\n        x: 1,\n        y: 1\n      }\n    },\n    dimensions: {\n      type: '4f',\n      value: [0, 0, 0, 0]\n    },\n    // LightDir:         { type: 'f3', value: [0, 1, 0] },\n    LightPos: {\n      type: '3f',\n      value: [0, 1, 0]\n    }\n  });\n  texture.baseTexture._powerOf2 = true;\n\n  if (texture.baseTexture.hasLoaded) {\n    this.onTextureLoaded();\n  } else {\n    texture.baseTexture.once('loaded', this.onTextureLoaded, this);\n  }\n}\n\nNormalMapFilter.prototype = Object.create(core.AbstractFilter.prototype);\nNormalMapFilter.prototype.constructor = NormalMapFilter;\nmodule.exports = NormalMapFilter;\n/**\n * Sets the map dimensions uniforms when the texture becomes available.\n *\n * @private\n */\n\nNormalMapFilter.prototype.onTextureLoaded = function () {\n  this.uniforms.mapDimensions.value.x = this.uniforms.displacementMap.value.width;\n  this.uniforms.mapDimensions.value.y = this.uniforms.displacementMap.value.height;\n};\n\nObject.defineProperties(NormalMapFilter.prototype, {\n  /**\n   * The texture used for the displacement map. Must be power of 2 texture.\n   *\n   * @member {Texture}\n   * @memberof NormalMapFilter#\n   */\n  map: {\n    get: function () {\n      return this.uniforms.displacementMap.value;\n    },\n    set: function (value) {\n      this.uniforms.displacementMap.value = value;\n    }\n  },\n\n  /**\n   * The multiplier used to scale the displacement result from the map calculation.\n   *\n   * @member {Point}\n   * @memberof NormalMapFilter#\n   */\n  scale: {\n    get: function () {\n      return this.uniforms.scale.value;\n    },\n    set: function (value) {\n      this.uniforms.scale.value = value;\n    }\n  },\n\n  /**\n   * The offset used to move the displacement map.\n   *\n   * @member {Point}\n   * @memberof NormalMapFilter#\n   */\n  offset: {\n    get: function () {\n      return this.uniforms.offset.value;\n    },\n    set: function (value) {\n      this.uniforms.offset.value = value;\n    }\n  }\n});","map":{"version":3,"names":["core","require","fs","NormalMapFilter","texture","AbstractFilter","call","readFileSync","__dirname","displacementMap","type","value","scale","x","y","offset","mapDimensions","dimensions","LightPos","baseTexture","_powerOf2","hasLoaded","onTextureLoaded","once","prototype","Object","create","constructor","module","exports","uniforms","width","height","defineProperties","map","get","set"],"sources":["/home/reyden-martin/Documents/Tech2/HUB/Sony CSL/SONY-CSL-PROJECT/node_modules/react-piano-roll/node_modules/pixi.js/src/filters/normal/NormalMapFilter.js"],"sourcesContent":["var core = require('../../core');\n// @see https://github.com/substack/brfs/issues/25\nvar fs = require('fs');\n\n/**\n * The NormalMapFilter class uses the pixel values from the specified texture (called the normal map)\n * to project lighting onto an object.\n *\n * @class\n * @extends PIXI.AbstractFilter\n * @memberof PIXI.filters\n * @param texture {Texture} The texture used for the normal map, must be power of 2 texture at the moment\n */\nfunction NormalMapFilter(texture)\n{\n    core.AbstractFilter.call(this,\n        // vertex shader\n        null,\n        // fragment shader\n        fs.readFileSync(__dirname + '/normalMap.frag', 'utf8'),\n        // custom uniforms\n        {\n            displacementMap:  { type: 'sampler2D', value: texture },\n            scale:            { type: '2f', value: { x: 15, y: 15 } },\n            offset:           { type: '2f', value: { x: 0,  y: 0 } },\n            mapDimensions:    { type: '2f', value: { x: 1,  y: 1 } },\n            dimensions:       { type: '4f', value: [0, 0, 0, 0] },\n            // LightDir:         { type: 'f3', value: [0, 1, 0] },\n            LightPos:         { type: '3f', value: [0, 1, 0] }\n        }\n    );\n\n    texture.baseTexture._powerOf2 = true;\n\n    if (texture.baseTexture.hasLoaded)\n    {\n        this.onTextureLoaded();\n    }\n    else\n    {\n        texture.baseTexture.once('loaded', this.onTextureLoaded, this);\n    }\n}\n\nNormalMapFilter.prototype = Object.create(core.AbstractFilter.prototype);\nNormalMapFilter.prototype.constructor = NormalMapFilter;\nmodule.exports = NormalMapFilter;\n\n/**\n * Sets the map dimensions uniforms when the texture becomes available.\n *\n * @private\n */\nNormalMapFilter.prototype.onTextureLoaded = function ()\n{\n    this.uniforms.mapDimensions.value.x = this.uniforms.displacementMap.value.width;\n    this.uniforms.mapDimensions.value.y = this.uniforms.displacementMap.value.height;\n};\n\nObject.defineProperties(NormalMapFilter.prototype, {\n    /**\n     * The texture used for the displacement map. Must be power of 2 texture.\n     *\n     * @member {Texture}\n     * @memberof NormalMapFilter#\n     */\n    map: {\n        get: function ()\n        {\n            return this.uniforms.displacementMap.value;\n        },\n        set: function (value)\n        {\n            this.uniforms.displacementMap.value = value;\n        }\n    },\n\n    /**\n     * The multiplier used to scale the displacement result from the map calculation.\n     *\n     * @member {Point}\n     * @memberof NormalMapFilter#\n     */\n    scale: {\n        get: function ()\n        {\n            return this.uniforms.scale.value;\n        },\n        set: function (value)\n        {\n            this.uniforms.scale.value = value;\n        }\n    },\n\n    /**\n     * The offset used to move the displacement map.\n     *\n     * @member {Point}\n     * @memberof NormalMapFilter#\n     */\n    offset: {\n        get: function ()\n        {\n            return this.uniforms.offset.value;\n        },\n        set: function (value)\n        {\n            this.uniforms.offset.value = value;\n        }\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}