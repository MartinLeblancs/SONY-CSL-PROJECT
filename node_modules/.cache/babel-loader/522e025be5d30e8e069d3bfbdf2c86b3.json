{"ast":null,"code":"var core = require('../../core'); // @see https://github.com/substack/brfs/issues/25\n\n\nvar fs = require('fs');\n/**\n * This filter applies a twist effect making display objects appear twisted in the given direction.\n *\n * @class\n * @extends PIXI.AbstractFilter\n * @memberof PIXI.filters\n */\n\n\nfunction TwistFilter() {\n  core.AbstractFilter.call(this, // vertex shader\n  null, // fragment shader\n  fs.readFileSync(__dirname + '/twist.frag', 'utf8'), // custom uniforms\n  {\n    radius: {\n      type: '1f',\n      value: 0.5\n    },\n    angle: {\n      type: '1f',\n      value: 5\n    },\n    offset: {\n      type: 'v2',\n      value: {\n        x: 0.5,\n        y: 0.5\n      }\n    }\n  });\n}\n\nTwistFilter.prototype = Object.create(core.AbstractFilter.prototype);\nTwistFilter.prototype.constructor = TwistFilter;\nmodule.exports = TwistFilter;\nObject.defineProperties(TwistFilter.prototype, {\n  /**\n   * This point describes the the offset of the twist.\n   *\n   * @member {Point}\n   * @memberof TwistFilter#\n   */\n  offset: {\n    get: function () {\n      return this.uniforms.offset.value;\n    },\n    set: function (value) {\n      this.uniforms.offset.value = value;\n    }\n  },\n\n  /**\n   * This radius of the twist.\n   *\n   * @member {number}\n   * @memberof TwistFilter#\n   */\n  radius: {\n    get: function () {\n      return this.uniforms.radius.value;\n    },\n    set: function (value) {\n      this.uniforms.radius.value = value;\n    }\n  },\n\n  /**\n   * This angle of the twist.\n   *\n   * @member {number}\n   * @memberof TwistFilter#\n   */\n  angle: {\n    get: function () {\n      return this.uniforms.angle.value;\n    },\n    set: function (value) {\n      this.uniforms.angle.value = value;\n    }\n  }\n});","map":{"version":3,"names":["core","require","fs","TwistFilter","AbstractFilter","call","readFileSync","__dirname","radius","type","value","angle","offset","x","y","prototype","Object","create","constructor","module","exports","defineProperties","get","uniforms","set"],"sources":["/home/reyden-martin/Documents/Tech2/HUB/Sony CSL/SONY-CSL-PROJECT/node_modules/react-piano-roll/node_modules/pixi.js/src/filters/twist/TwistFilter.js"],"sourcesContent":["var core = require('../../core');\n// @see https://github.com/substack/brfs/issues/25\nvar fs = require('fs');\n\n/**\n * This filter applies a twist effect making display objects appear twisted in the given direction.\n *\n * @class\n * @extends PIXI.AbstractFilter\n * @memberof PIXI.filters\n */\nfunction TwistFilter()\n{\n    core.AbstractFilter.call(this,\n        // vertex shader\n        null,\n        // fragment shader\n        fs.readFileSync(__dirname + '/twist.frag', 'utf8'),\n        // custom uniforms\n        {\n            radius:     { type: '1f', value: 0.5 },\n            angle:      { type: '1f', value: 5 },\n            offset:     { type: 'v2', value: { x: 0.5, y: 0.5 } }\n        }\n    );\n}\n\nTwistFilter.prototype = Object.create(core.AbstractFilter.prototype);\nTwistFilter.prototype.constructor = TwistFilter;\nmodule.exports = TwistFilter;\n\nObject.defineProperties(TwistFilter.prototype, {\n    /**\n     * This point describes the the offset of the twist.\n     *\n     * @member {Point}\n     * @memberof TwistFilter#\n     */\n    offset: {\n        get: function ()\n        {\n            return this.uniforms.offset.value;\n        },\n        set: function (value)\n        {\n            this.uniforms.offset.value = value;\n        }\n    },\n\n    /**\n     * This radius of the twist.\n     *\n     * @member {number}\n     * @memberof TwistFilter#\n     */\n    radius: {\n        get: function ()\n        {\n            return this.uniforms.radius.value;\n        },\n        set: function (value)\n        {\n            this.uniforms.radius.value = value;\n        }\n    },\n\n    /**\n     * This angle of the twist.\n     *\n     * @member {number}\n     * @memberof TwistFilter#\n     */\n    angle: {\n        get: function ()\n        {\n            return this.uniforms.angle.value;\n        },\n        set: function (value)\n        {\n            this.uniforms.angle.value = value;\n        }\n    }\n});\n"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,YAAD,CAAlB,C,CACA;;;AACA,IAAIC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAhB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,WAAT,GACA;EACIH,IAAI,CAACI,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,EACI;EACA,IAFJ,EAGI;EACAH,EAAE,CAACI,YAAH,CAAgBC,SAAS,GAAG,aAA5B,EAA2C,MAA3C,CAJJ,EAKI;EACA;IACIC,MAAM,EAAM;MAAEC,IAAI,EAAE,IAAR;MAAcC,KAAK,EAAE;IAArB,CADhB;IAEIC,KAAK,EAAO;MAAEF,IAAI,EAAE,IAAR;MAAcC,KAAK,EAAE;IAArB,CAFhB;IAGIE,MAAM,EAAM;MAAEH,IAAI,EAAE,IAAR;MAAcC,KAAK,EAAE;QAAEG,CAAC,EAAE,GAAL;QAAUC,CAAC,EAAE;MAAb;IAArB;EAHhB,CANJ;AAYH;;AAEDX,WAAW,CAACY,SAAZ,GAAwBC,MAAM,CAACC,MAAP,CAAcjB,IAAI,CAACI,cAAL,CAAoBW,SAAlC,CAAxB;AACAZ,WAAW,CAACY,SAAZ,CAAsBG,WAAtB,GAAoCf,WAApC;AACAgB,MAAM,CAACC,OAAP,GAAiBjB,WAAjB;AAEAa,MAAM,CAACK,gBAAP,CAAwBlB,WAAW,CAACY,SAApC,EAA+C;EAC3C;AACJ;AACA;AACA;AACA;AACA;EACIH,MAAM,EAAE;IACJU,GAAG,EAAE,YACL;MACI,OAAO,KAAKC,QAAL,CAAcX,MAAd,CAAqBF,KAA5B;IACH,CAJG;IAKJc,GAAG,EAAE,UAAUd,KAAV,EACL;MACI,KAAKa,QAAL,CAAcX,MAAd,CAAqBF,KAArB,GAA6BA,KAA7B;IACH;EARG,CAPmC;;EAkB3C;AACJ;AACA;AACA;AACA;AACA;EACIF,MAAM,EAAE;IACJc,GAAG,EAAE,YACL;MACI,OAAO,KAAKC,QAAL,CAAcf,MAAd,CAAqBE,KAA5B;IACH,CAJG;IAKJc,GAAG,EAAE,UAAUd,KAAV,EACL;MACI,KAAKa,QAAL,CAAcf,MAAd,CAAqBE,KAArB,GAA6BA,KAA7B;IACH;EARG,CAxBmC;;EAmC3C;AACJ;AACA;AACA;AACA;AACA;EACIC,KAAK,EAAE;IACHW,GAAG,EAAE,YACL;MACI,OAAO,KAAKC,QAAL,CAAcZ,KAAd,CAAoBD,KAA3B;IACH,CAJE;IAKHc,GAAG,EAAE,UAAUd,KAAV,EACL;MACI,KAAKa,QAAL,CAAcZ,KAAd,CAAoBD,KAApB,GAA4BA,KAA5B;IACH;EARE;AAzCoC,CAA/C"},"metadata":{},"sourceType":"script"}