{"ast":null,"code":"'use strict'; // a simple in-memory cache for resources\n\nvar cache = {};\n\nmodule.exports = function () {\n  return function (resource, next) {\n    // if cached, then set data and complete the resource\n    if (cache[resource.url]) {\n      resource.data = cache[resource.url];\n      resource.complete(); // marks resource load complete and stops processing before middlewares\n    } // if not cached, wait for complete and store it in the cache.\n    else {\n      resource.once('complete', function () {\n        cache[this.url] = this.data;\n      });\n    }\n\n    next();\n  };\n};","map":{"version":3,"names":["cache","module","exports","resource","next","url","data","complete","once"],"sources":["/home/reyden-martin/Documents/Tech2/HUB/Sony CSL/SONY-CSL-PROJECT/node_modules/resource-loader/src/middlewares/caching/memory.js"],"sourcesContent":["'use strict';\n\n// a simple in-memory cache for resources\nvar cache = {};\n\nmodule.exports = function () {\n    return function (resource, next) {\n        // if cached, then set data and complete the resource\n        if (cache[resource.url]) {\n            resource.data = cache[resource.url];\n            resource.complete(); // marks resource load complete and stops processing before middlewares\n        }\n        // if not cached, wait for complete and store it in the cache.\n        else {\n            resource.once('complete', function () {\n                cache[this.url] = this.data;\n            });\n        }\n\n        next();\n    };\n};\n"],"mappings":"AAAA,a,CAEA;;AACA,IAAIA,KAAK,GAAG,EAAZ;;AAEAC,MAAM,CAACC,OAAP,GAAiB,YAAY;EACzB,OAAO,UAAUC,QAAV,EAAoBC,IAApB,EAA0B;IAC7B;IACA,IAAIJ,KAAK,CAACG,QAAQ,CAACE,GAAV,CAAT,EAAyB;MACrBF,QAAQ,CAACG,IAAT,GAAgBN,KAAK,CAACG,QAAQ,CAACE,GAAV,CAArB;MACAF,QAAQ,CAACI,QAAT,GAFqB,CAEA;IACxB,CAHD,CAIA;IAJA,KAKK;MACDJ,QAAQ,CAACK,IAAT,CAAc,UAAd,EAA0B,YAAY;QAClCR,KAAK,CAAC,KAAKK,GAAN,CAAL,GAAkB,KAAKC,IAAvB;MACH,CAFD;IAGH;;IAEDF,IAAI;EACP,CAdD;AAeH,CAhBD"},"metadata":{},"sourceType":"script"}