{"ast":null,"code":"var SystemRenderer = require('../SystemRenderer'),\n    CanvasMaskManager = require('./utils/CanvasMaskManager'),\n    utils = require('../../utils'),\n    math = require('../../math'),\n    CONST = require('../../const');\n/**\n * The CanvasRenderer draws the scene and all its content onto a 2d canvas. This renderer should be used for browsers that do not support webGL.\n * Don't forget to add the CanvasRenderer.view to your DOM or you will not see anything :)\n *\n * @class\n * @memberof PIXI\n * @extends PIXI.SystemRenderer\n * @param [width=800] {number} the width of the canvas view\n * @param [height=600] {number} the height of the canvas view\n * @param [options] {object} The optional renderer parameters\n * @param [options.view] {HTMLCanvasElement} the canvas to use as a view, optional\n * @param [options.transparent=false] {boolean} If the render view is transparent, default false\n * @param [options.autoResize=false] {boolean} If the render view is automatically resized, default false\n * @param [options.antialias=false] {boolean} sets antialias (only applicable in chrome at the moment)\n * @param [options.resolution=1] {number} the resolution of the renderer retina would be 2\n * @param [options.clearBeforeRender=true] {boolean} This sets if the CanvasRenderer will clear the canvas or\n *      not before the new render pass.\n */\n\n\nfunction CanvasRenderer(width, height, options) {\n  SystemRenderer.call(this, 'Canvas', width, height, options);\n  this.type = CONST.RENDERER_TYPE.CANVAS;\n  /**\n   * The canvas 2d context that everything is drawn with.\n   *\n   * @member {CanvasRenderingContext2D}\n   */\n\n  this.context = this.view.getContext('2d', {\n    alpha: this.transparent\n  });\n  /**\n   * Boolean flag controlling canvas refresh.\n   *\n   * @member {boolean}\n   */\n\n  this.refresh = true;\n  /**\n   * Instance of a CanvasMaskManager, handles masking when using the canvas renderer.\n   *\n   * @member {CanvasMaskManager}\n   */\n\n  this.maskManager = new CanvasMaskManager();\n  /**\n   * If true Pixi will Math.floor() x/y values when rendering, stopping pixel interpolation.\n   * Handy for crisp pixel art and speed on legacy devices.\n   *\n   * @member {boolean}\n   */\n\n  this.roundPixels = false;\n  /**\n   * Tracks the active scale mode for this renderer.\n   *\n   * @member {SCALE_MODE}\n   */\n\n  this.currentScaleMode = CONST.SCALE_MODES.DEFAULT;\n  /**\n   * Tracks the active blend mode for this renderer.\n   *\n   * @member {SCALE_MODE}\n   */\n\n  this.currentBlendMode = CONST.BLEND_MODES.NORMAL;\n  /**\n   * The canvas property used to set the canvas smoothing property.\n   *\n   * @member {string}\n   */\n\n  this.smoothProperty = 'imageSmoothingEnabled';\n\n  if (!this.context.imageSmoothingEnabled) {\n    if (this.context.webkitImageSmoothingEnabled) {\n      this.smoothProperty = 'webkitImageSmoothingEnabled';\n    } else if (this.context.mozImageSmoothingEnabled) {\n      this.smoothProperty = 'mozImageSmoothingEnabled';\n    } else if (this.context.oImageSmoothingEnabled) {\n      this.smoothProperty = 'oImageSmoothingEnabled';\n    } else if (this.context.msImageSmoothingEnabled) {\n      this.smoothProperty = 'msImageSmoothingEnabled';\n    }\n  }\n\n  this.initPlugins();\n\n  this._mapBlendModes();\n  /**\n   * This temporary display object used as the parent of the currently being rendered item\n   *\n   * @member {DisplayObject}\n   * @private\n   */\n\n\n  this._tempDisplayObjectParent = {\n    worldTransform: new math.Matrix(),\n    worldAlpha: 1\n  };\n  this.resize(width, height);\n} // constructor\n\n\nCanvasRenderer.prototype = Object.create(SystemRenderer.prototype);\nCanvasRenderer.prototype.constructor = CanvasRenderer;\nmodule.exports = CanvasRenderer;\nutils.pluginTarget.mixin(CanvasRenderer);\n/**\n * Renders the object to this canvas view\n *\n * @param object {DisplayObject} the object to be rendered\n */\n\nCanvasRenderer.prototype.render = function (object) {\n  var cacheParent = object.parent;\n  this._lastObjectRendered = object;\n  object.parent = this._tempDisplayObjectParent; // update the scene graph\n\n  object.updateTransform();\n  object.parent = cacheParent;\n  this.context.setTransform(1, 0, 0, 1, 0, 0);\n  this.context.globalAlpha = 1;\n  this.currentBlendMode = CONST.BLEND_MODES.NORMAL;\n  this.context.globalCompositeOperation = this.blendModes[CONST.BLEND_MODES.NORMAL];\n\n  if (navigator.isCocoonJS && this.view.screencanvas) {\n    this.context.fillStyle = 'black';\n    this.context.clear();\n  }\n\n  if (this.clearBeforeRender) {\n    if (this.transparent) {\n      this.context.clearRect(0, 0, this.width, this.height);\n    } else {\n      this.context.fillStyle = this._backgroundColorString;\n      this.context.fillRect(0, 0, this.width, this.height);\n    }\n  }\n\n  this.renderDisplayObject(object, this.context);\n};\n/**\n * Removes everything from the renderer and optionally removes the Canvas DOM element.\n *\n * @param [removeView=false] {boolean} Removes the Canvas element from the DOM.\n */\n\n\nCanvasRenderer.prototype.destroy = function (removeView) {\n  this.destroyPlugins(); // call the base destroy\n\n  SystemRenderer.prototype.destroy.call(this, removeView);\n  this.context = null;\n  this.refresh = true;\n  this.maskManager.destroy();\n  this.maskManager = null;\n  this.roundPixels = false;\n  this.currentScaleMode = 0;\n  this.currentBlendMode = 0;\n  this.smoothProperty = null;\n};\n/**\n * Renders a display object\n *\n * @param displayObject {DisplayObject} The displayObject to render\n * @private\n */\n\n\nCanvasRenderer.prototype.renderDisplayObject = function (displayObject, context) {\n  var tempContext = this.context;\n  this.context = context;\n  displayObject.renderCanvas(this);\n  this.context = tempContext;\n};\n\nCanvasRenderer.prototype.resize = function (w, h) {\n  SystemRenderer.prototype.resize.call(this, w, h); //reset the scale mode.. oddly this seems to be reset when the canvas is resized.\n  //surely a browser bug?? Let pixi fix that for you..\n\n  this.currentScaleMode = CONST.SCALE_MODES.DEFAULT;\n\n  if (this.smoothProperty) {\n    this.context[this.smoothProperty] = this.currentScaleMode === CONST.SCALE_MODES.LINEAR;\n  }\n};\n/**\n * Maps Pixi blend modes to canvas blend modes.\n *\n * @private\n */\n\n\nCanvasRenderer.prototype._mapBlendModes = function () {\n  if (!this.blendModes) {\n    this.blendModes = {};\n\n    if (utils.canUseNewCanvasBlendModes()) {\n      this.blendModes[CONST.BLEND_MODES.NORMAL] = 'source-over';\n      this.blendModes[CONST.BLEND_MODES.ADD] = 'lighter'; //IS THIS OK???\n\n      this.blendModes[CONST.BLEND_MODES.MULTIPLY] = 'multiply';\n      this.blendModes[CONST.BLEND_MODES.SCREEN] = 'screen';\n      this.blendModes[CONST.BLEND_MODES.OVERLAY] = 'overlay';\n      this.blendModes[CONST.BLEND_MODES.DARKEN] = 'darken';\n      this.blendModes[CONST.BLEND_MODES.LIGHTEN] = 'lighten';\n      this.blendModes[CONST.BLEND_MODES.COLOR_DODGE] = 'color-dodge';\n      this.blendModes[CONST.BLEND_MODES.COLOR_BURN] = 'color-burn';\n      this.blendModes[CONST.BLEND_MODES.HARD_LIGHT] = 'hard-light';\n      this.blendModes[CONST.BLEND_MODES.SOFT_LIGHT] = 'soft-light';\n      this.blendModes[CONST.BLEND_MODES.DIFFERENCE] = 'difference';\n      this.blendModes[CONST.BLEND_MODES.EXCLUSION] = 'exclusion';\n      this.blendModes[CONST.BLEND_MODES.HUE] = 'hue';\n      this.blendModes[CONST.BLEND_MODES.SATURATION] = 'saturate';\n      this.blendModes[CONST.BLEND_MODES.COLOR] = 'color';\n      this.blendModes[CONST.BLEND_MODES.LUMINOSITY] = 'luminosity';\n    } else {\n      // this means that the browser does not support the cool new blend modes in canvas 'cough' ie 'cough'\n      this.blendModes[CONST.BLEND_MODES.NORMAL] = 'source-over';\n      this.blendModes[CONST.BLEND_MODES.ADD] = 'lighter'; //IS THIS OK???\n\n      this.blendModes[CONST.BLEND_MODES.MULTIPLY] = 'source-over';\n      this.blendModes[CONST.BLEND_MODES.SCREEN] = 'source-over';\n      this.blendModes[CONST.BLEND_MODES.OVERLAY] = 'source-over';\n      this.blendModes[CONST.BLEND_MODES.DARKEN] = 'source-over';\n      this.blendModes[CONST.BLEND_MODES.LIGHTEN] = 'source-over';\n      this.blendModes[CONST.BLEND_MODES.COLOR_DODGE] = 'source-over';\n      this.blendModes[CONST.BLEND_MODES.COLOR_BURN] = 'source-over';\n      this.blendModes[CONST.BLEND_MODES.HARD_LIGHT] = 'source-over';\n      this.blendModes[CONST.BLEND_MODES.SOFT_LIGHT] = 'source-over';\n      this.blendModes[CONST.BLEND_MODES.DIFFERENCE] = 'source-over';\n      this.blendModes[CONST.BLEND_MODES.EXCLUSION] = 'source-over';\n      this.blendModes[CONST.BLEND_MODES.HUE] = 'source-over';\n      this.blendModes[CONST.BLEND_MODES.SATURATION] = 'source-over';\n      this.blendModes[CONST.BLEND_MODES.COLOR] = 'source-over';\n      this.blendModes[CONST.BLEND_MODES.LUMINOSITY] = 'source-over';\n    }\n  }\n};","map":{"version":3,"names":["SystemRenderer","require","CanvasMaskManager","utils","math","CONST","CanvasRenderer","width","height","options","call","type","RENDERER_TYPE","CANVAS","context","view","getContext","alpha","transparent","refresh","maskManager","roundPixels","currentScaleMode","SCALE_MODES","DEFAULT","currentBlendMode","BLEND_MODES","NORMAL","smoothProperty","imageSmoothingEnabled","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","oImageSmoothingEnabled","msImageSmoothingEnabled","initPlugins","_mapBlendModes","_tempDisplayObjectParent","worldTransform","Matrix","worldAlpha","resize","prototype","Object","create","constructor","module","exports","pluginTarget","mixin","render","object","cacheParent","parent","_lastObjectRendered","updateTransform","setTransform","globalAlpha","globalCompositeOperation","blendModes","navigator","isCocoonJS","screencanvas","fillStyle","clear","clearBeforeRender","clearRect","_backgroundColorString","fillRect","renderDisplayObject","destroy","removeView","destroyPlugins","displayObject","tempContext","renderCanvas","w","h","LINEAR","canUseNewCanvasBlendModes","ADD","MULTIPLY","SCREEN","OVERLAY","DARKEN","LIGHTEN","COLOR_DODGE","COLOR_BURN","HARD_LIGHT","SOFT_LIGHT","DIFFERENCE","EXCLUSION","HUE","SATURATION","COLOR","LUMINOSITY"],"sources":["/home/reyden-martin/Documents/Tech2/HUB/Sony CSL/SONY-CSL-PROJECT/node_modules/react-piano-roll/node_modules/pixi.js/src/core/renderers/canvas/CanvasRenderer.js"],"sourcesContent":["var SystemRenderer = require('../SystemRenderer'),\n    CanvasMaskManager = require('./utils/CanvasMaskManager'),\n    utils = require('../../utils'),\n    math = require('../../math'),\n    CONST = require('../../const');\n\n/**\n * The CanvasRenderer draws the scene and all its content onto a 2d canvas. This renderer should be used for browsers that do not support webGL.\n * Don't forget to add the CanvasRenderer.view to your DOM or you will not see anything :)\n *\n * @class\n * @memberof PIXI\n * @extends PIXI.SystemRenderer\n * @param [width=800] {number} the width of the canvas view\n * @param [height=600] {number} the height of the canvas view\n * @param [options] {object} The optional renderer parameters\n * @param [options.view] {HTMLCanvasElement} the canvas to use as a view, optional\n * @param [options.transparent=false] {boolean} If the render view is transparent, default false\n * @param [options.autoResize=false] {boolean} If the render view is automatically resized, default false\n * @param [options.antialias=false] {boolean} sets antialias (only applicable in chrome at the moment)\n * @param [options.resolution=1] {number} the resolution of the renderer retina would be 2\n * @param [options.clearBeforeRender=true] {boolean} This sets if the CanvasRenderer will clear the canvas or\n *      not before the new render pass.\n */\nfunction CanvasRenderer(width, height, options)\n{\n    SystemRenderer.call(this, 'Canvas', width, height, options);\n\n    this.type = CONST.RENDERER_TYPE.CANVAS;\n\n    /**\n     * The canvas 2d context that everything is drawn with.\n     *\n     * @member {CanvasRenderingContext2D}\n     */\n    this.context = this.view.getContext('2d', { alpha: this.transparent });\n\n    /**\n     * Boolean flag controlling canvas refresh.\n     *\n     * @member {boolean}\n     */\n    this.refresh = true;\n\n    /**\n     * Instance of a CanvasMaskManager, handles masking when using the canvas renderer.\n     *\n     * @member {CanvasMaskManager}\n     */\n    this.maskManager = new CanvasMaskManager();\n\n    /**\n     * If true Pixi will Math.floor() x/y values when rendering, stopping pixel interpolation.\n     * Handy for crisp pixel art and speed on legacy devices.\n     *\n     * @member {boolean}\n     */\n    this.roundPixels = false;\n\n    /**\n     * Tracks the active scale mode for this renderer.\n     *\n     * @member {SCALE_MODE}\n     */\n    this.currentScaleMode = CONST.SCALE_MODES.DEFAULT;\n\n    /**\n     * Tracks the active blend mode for this renderer.\n     *\n     * @member {SCALE_MODE}\n     */\n    this.currentBlendMode = CONST.BLEND_MODES.NORMAL;\n\n    /**\n     * The canvas property used to set the canvas smoothing property.\n     *\n     * @member {string}\n     */\n    this.smoothProperty = 'imageSmoothingEnabled';\n\n    if (!this.context.imageSmoothingEnabled)\n    {\n        if (this.context.webkitImageSmoothingEnabled)\n        {\n            this.smoothProperty = 'webkitImageSmoothingEnabled';\n        }\n        else if (this.context.mozImageSmoothingEnabled)\n        {\n            this.smoothProperty = 'mozImageSmoothingEnabled';\n        }\n        else if (this.context.oImageSmoothingEnabled)\n        {\n            this.smoothProperty = 'oImageSmoothingEnabled';\n        }\n        else if (this.context.msImageSmoothingEnabled)\n        {\n            this.smoothProperty = 'msImageSmoothingEnabled';\n        }\n    }\n\n    this.initPlugins();\n\n    this._mapBlendModes();\n\n    /**\n     * This temporary display object used as the parent of the currently being rendered item\n     *\n     * @member {DisplayObject}\n     * @private\n     */\n    this._tempDisplayObjectParent = {\n        worldTransform: new math.Matrix(),\n        worldAlpha: 1\n    };\n\n\n    this.resize(width, height);\n}\n\n// constructor\nCanvasRenderer.prototype = Object.create(SystemRenderer.prototype);\nCanvasRenderer.prototype.constructor = CanvasRenderer;\nmodule.exports = CanvasRenderer;\nutils.pluginTarget.mixin(CanvasRenderer);\n\n/**\n * Renders the object to this canvas view\n *\n * @param object {DisplayObject} the object to be rendered\n */\nCanvasRenderer.prototype.render = function (object)\n{\n    var cacheParent = object.parent;\n\n    this._lastObjectRendered = object;\n\n    object.parent = this._tempDisplayObjectParent;\n\n    // update the scene graph\n    object.updateTransform();\n\n    object.parent = cacheParent;\n\n    this.context.setTransform(1, 0, 0, 1, 0, 0);\n\n    this.context.globalAlpha = 1;\n\n    this.currentBlendMode = CONST.BLEND_MODES.NORMAL;\n    this.context.globalCompositeOperation = this.blendModes[CONST.BLEND_MODES.NORMAL];\n\n    if (navigator.isCocoonJS && this.view.screencanvas)\n    {\n        this.context.fillStyle = 'black';\n        this.context.clear();\n    }\n\n    if (this.clearBeforeRender)\n    {\n        if (this.transparent)\n        {\n            this.context.clearRect(0, 0, this.width, this.height);\n        }\n        else\n        {\n            this.context.fillStyle = this._backgroundColorString;\n            this.context.fillRect(0, 0, this.width , this.height);\n        }\n    }\n\n    this.renderDisplayObject(object, this.context);\n};\n\n/**\n * Removes everything from the renderer and optionally removes the Canvas DOM element.\n *\n * @param [removeView=false] {boolean} Removes the Canvas element from the DOM.\n */\nCanvasRenderer.prototype.destroy = function (removeView)\n{\n    this.destroyPlugins();\n\n    // call the base destroy\n    SystemRenderer.prototype.destroy.call(this, removeView);\n\n    this.context = null;\n\n    this.refresh = true;\n\n    this.maskManager.destroy();\n    this.maskManager = null;\n\n    this.roundPixels = false;\n\n    this.currentScaleMode = 0;\n    this.currentBlendMode = 0;\n\n    this.smoothProperty = null;\n};\n\n/**\n * Renders a display object\n *\n * @param displayObject {DisplayObject} The displayObject to render\n * @private\n */\nCanvasRenderer.prototype.renderDisplayObject = function (displayObject, context)\n{\n    var tempContext = this.context;\n\n    this.context = context;\n    displayObject.renderCanvas(this);\n    this.context = tempContext;\n};\n\nCanvasRenderer.prototype.resize = function (w, h)\n{\n    SystemRenderer.prototype.resize.call(this, w, h);\n\n    //reset the scale mode.. oddly this seems to be reset when the canvas is resized.\n    //surely a browser bug?? Let pixi fix that for you..\n    this.currentScaleMode = CONST.SCALE_MODES.DEFAULT;\n    \n    if(this.smoothProperty)\n    {\n        this.context[this.smoothProperty] = (this.currentScaleMode === CONST.SCALE_MODES.LINEAR);\n    }\n\n};\n\n/**\n * Maps Pixi blend modes to canvas blend modes.\n *\n * @private\n */\nCanvasRenderer.prototype._mapBlendModes = function ()\n{\n    if (!this.blendModes)\n    {\n        this.blendModes = {};\n\n        if (utils.canUseNewCanvasBlendModes())\n        {\n            this.blendModes[CONST.BLEND_MODES.NORMAL]        = 'source-over';\n            this.blendModes[CONST.BLEND_MODES.ADD]           = 'lighter'; //IS THIS OK???\n            this.blendModes[CONST.BLEND_MODES.MULTIPLY]      = 'multiply';\n            this.blendModes[CONST.BLEND_MODES.SCREEN]        = 'screen';\n            this.blendModes[CONST.BLEND_MODES.OVERLAY]       = 'overlay';\n            this.blendModes[CONST.BLEND_MODES.DARKEN]        = 'darken';\n            this.blendModes[CONST.BLEND_MODES.LIGHTEN]       = 'lighten';\n            this.blendModes[CONST.BLEND_MODES.COLOR_DODGE]   = 'color-dodge';\n            this.blendModes[CONST.BLEND_MODES.COLOR_BURN]    = 'color-burn';\n            this.blendModes[CONST.BLEND_MODES.HARD_LIGHT]    = 'hard-light';\n            this.blendModes[CONST.BLEND_MODES.SOFT_LIGHT]    = 'soft-light';\n            this.blendModes[CONST.BLEND_MODES.DIFFERENCE]    = 'difference';\n            this.blendModes[CONST.BLEND_MODES.EXCLUSION]     = 'exclusion';\n            this.blendModes[CONST.BLEND_MODES.HUE]           = 'hue';\n            this.blendModes[CONST.BLEND_MODES.SATURATION]    = 'saturate';\n            this.blendModes[CONST.BLEND_MODES.COLOR]         = 'color';\n            this.blendModes[CONST.BLEND_MODES.LUMINOSITY]    = 'luminosity';\n        }\n        else\n        {\n            // this means that the browser does not support the cool new blend modes in canvas 'cough' ie 'cough'\n            this.blendModes[CONST.BLEND_MODES.NORMAL]        = 'source-over';\n            this.blendModes[CONST.BLEND_MODES.ADD]           = 'lighter'; //IS THIS OK???\n            this.blendModes[CONST.BLEND_MODES.MULTIPLY]      = 'source-over';\n            this.blendModes[CONST.BLEND_MODES.SCREEN]        = 'source-over';\n            this.blendModes[CONST.BLEND_MODES.OVERLAY]       = 'source-over';\n            this.blendModes[CONST.BLEND_MODES.DARKEN]        = 'source-over';\n            this.blendModes[CONST.BLEND_MODES.LIGHTEN]       = 'source-over';\n            this.blendModes[CONST.BLEND_MODES.COLOR_DODGE]   = 'source-over';\n            this.blendModes[CONST.BLEND_MODES.COLOR_BURN]    = 'source-over';\n            this.blendModes[CONST.BLEND_MODES.HARD_LIGHT]    = 'source-over';\n            this.blendModes[CONST.BLEND_MODES.SOFT_LIGHT]    = 'source-over';\n            this.blendModes[CONST.BLEND_MODES.DIFFERENCE]    = 'source-over';\n            this.blendModes[CONST.BLEND_MODES.EXCLUSION]     = 'source-over';\n            this.blendModes[CONST.BLEND_MODES.HUE]           = 'source-over';\n            this.blendModes[CONST.BLEND_MODES.SATURATION]    = 'source-over';\n            this.blendModes[CONST.BLEND_MODES.COLOR]         = 'source-over';\n            this.blendModes[CONST.BLEND_MODES.LUMINOSITY]    = 'source-over';\n        }\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}