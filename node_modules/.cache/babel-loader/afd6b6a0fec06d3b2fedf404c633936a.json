{"ast":null,"code":"var core = require('../../core'); // @see https://github.com/substack/brfs/issues/25\n\n\nvar fs = require('fs');\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n * original filter: https://github.com/evanw/glfx.js/blob/master/src/filters/fun/dotscreen.js\n */\n\n/**\n * This filter applies a dotscreen effect making display objects appear to be made out of\n * black and white halftone dots like an old printer.\n *\n * @class\n * @extends PIXI.AbstractFilter\n * @memberof PIXI.filters\n */\n\n\nfunction DotScreenFilter() {\n  core.AbstractFilter.call(this, // vertex shader\n  null, // fragment shader\n  fs.readFileSync(__dirname + '/dotScreen.frag', 'utf8'), // custom uniforms\n  {\n    scale: {\n      type: '1f',\n      value: 1\n    },\n    angle: {\n      type: '1f',\n      value: 5\n    },\n    dimensions: {\n      type: '4fv',\n      value: [0, 0, 0, 0]\n    }\n  });\n}\n\nDotScreenFilter.prototype = Object.create(core.AbstractFilter.prototype);\nDotScreenFilter.prototype.constructor = DotScreenFilter;\nmodule.exports = DotScreenFilter;\nObject.defineProperties(DotScreenFilter.prototype, {\n  /**\n   * The scale of the effect.\n   * @member {number}\n   * @memberof DotScreenFilter#\n   */\n  scale: {\n    get: function () {\n      return this.uniforms.scale.value;\n    },\n    set: function (value) {\n      this.uniforms.scale.value = value;\n    }\n  },\n\n  /**\n   * The radius of the effect.\n   * @member {number}\n   * @memberof DotScreenFilter#\n   */\n  angle: {\n    get: function () {\n      return this.uniforms.angle.value;\n    },\n    set: function (value) {\n      this.uniforms.angle.value = value;\n    }\n  }\n});","map":{"version":3,"names":["core","require","fs","DotScreenFilter","AbstractFilter","call","readFileSync","__dirname","scale","type","value","angle","dimensions","prototype","Object","create","constructor","module","exports","defineProperties","get","uniforms","set"],"sources":["/home/reyden-martin/Documents/Tech2/HUB/Sony CSL/SONY-CSL-PROJECT/node_modules/react-piano-roll/node_modules/pixi.js/src/filters/dot/DotScreenFilter.js"],"sourcesContent":["var core = require('../../core');\n// @see https://github.com/substack/brfs/issues/25\nvar fs = require('fs');\n\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n * original filter: https://github.com/evanw/glfx.js/blob/master/src/filters/fun/dotscreen.js\n */\n\n/**\n * This filter applies a dotscreen effect making display objects appear to be made out of\n * black and white halftone dots like an old printer.\n *\n * @class\n * @extends PIXI.AbstractFilter\n * @memberof PIXI.filters\n */\nfunction DotScreenFilter()\n{\n    core.AbstractFilter.call(this,\n        // vertex shader\n        null,\n        // fragment shader\n        fs.readFileSync(__dirname + '/dotScreen.frag', 'utf8'),\n        // custom uniforms\n        {\n            scale:      { type: '1f', value: 1 },\n            angle:      { type: '1f', value: 5 },\n            dimensions: { type: '4fv', value: [0, 0, 0, 0] }\n        }\n    );\n}\n\nDotScreenFilter.prototype = Object.create(core.AbstractFilter.prototype);\nDotScreenFilter.prototype.constructor = DotScreenFilter;\nmodule.exports = DotScreenFilter;\n\nObject.defineProperties(DotScreenFilter.prototype, {\n    /**\n     * The scale of the effect.\n     * @member {number}\n     * @memberof DotScreenFilter#\n     */\n    scale: {\n        get: function ()\n        {\n            return this.uniforms.scale.value;\n        },\n        set: function (value)\n        {\n            this.uniforms.scale.value = value;\n        }\n    },\n\n    /**\n     * The radius of the effect.\n     * @member {number}\n     * @memberof DotScreenFilter#\n     */\n    angle: {\n        get: function ()\n        {\n            return this.uniforms.angle.value;\n        },\n        set: function (value)\n        {\n            this.uniforms.angle.value = value;\n        }\n    }\n});\n"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,YAAD,CAAlB,C,CACA;;;AACA,IAAIC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAhB;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,eAAT,GACA;EACIH,IAAI,CAACI,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,EACI;EACA,IAFJ,EAGI;EACAH,EAAE,CAACI,YAAH,CAAgBC,SAAS,GAAG,iBAA5B,EAA+C,MAA/C,CAJJ,EAKI;EACA;IACIC,KAAK,EAAO;MAAEC,IAAI,EAAE,IAAR;MAAcC,KAAK,EAAE;IAArB,CADhB;IAEIC,KAAK,EAAO;MAAEF,IAAI,EAAE,IAAR;MAAcC,KAAK,EAAE;IAArB,CAFhB;IAGIE,UAAU,EAAE;MAAEH,IAAI,EAAE,KAAR;MAAeC,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV;IAAtB;EAHhB,CANJ;AAYH;;AAEDP,eAAe,CAACU,SAAhB,GAA4BC,MAAM,CAACC,MAAP,CAAcf,IAAI,CAACI,cAAL,CAAoBS,SAAlC,CAA5B;AACAV,eAAe,CAACU,SAAhB,CAA0BG,WAA1B,GAAwCb,eAAxC;AACAc,MAAM,CAACC,OAAP,GAAiBf,eAAjB;AAEAW,MAAM,CAACK,gBAAP,CAAwBhB,eAAe,CAACU,SAAxC,EAAmD;EAC/C;AACJ;AACA;AACA;AACA;EACIL,KAAK,EAAE;IACHY,GAAG,EAAE,YACL;MACI,OAAO,KAAKC,QAAL,CAAcb,KAAd,CAAoBE,KAA3B;IACH,CAJE;IAKHY,GAAG,EAAE,UAAUZ,KAAV,EACL;MACI,KAAKW,QAAL,CAAcb,KAAd,CAAoBE,KAApB,GAA4BA,KAA5B;IACH;EARE,CANwC;;EAiB/C;AACJ;AACA;AACA;AACA;EACIC,KAAK,EAAE;IACHS,GAAG,EAAE,YACL;MACI,OAAO,KAAKC,QAAL,CAAcV,KAAd,CAAoBD,KAA3B;IACH,CAJE;IAKHY,GAAG,EAAE,UAAUZ,KAAV,EACL;MACI,KAAKW,QAAL,CAAcV,KAAd,CAAoBD,KAApB,GAA4BA,KAA5B;IACH;EARE;AAtBwC,CAAnD"},"metadata":{},"sourceType":"script"}