{"ast":null,"code":"var Note = require('./lib/note');\n\nvar Interval = require('./lib/interval');\n\nvar Chord = require('./lib/chord');\n\nvar Scale = require('./lib/scale'); // never thought I would write this, but: Legacy support\n\n\nfunction intervalConstructor(from, to) {\n  // Construct a Interval object from string representation\n  if (typeof from === 'string') return Interval.toCoord(from);\n  if (typeof to === 'string' && from instanceof Note) return Interval.from(from, Interval.toCoord(to));\n  if (to instanceof Interval && from instanceof Note) return Interval.from(from, to);\n  if (to instanceof Note && from instanceof Note) return Interval.between(from, to);\n  throw new Error('Invalid parameters');\n}\n\nintervalConstructor.toCoord = Interval.toCoord;\nintervalConstructor.from = Interval.from;\nintervalConstructor.between = Interval.between;\nintervalConstructor.invert = Interval.invert;\n\nfunction noteConstructor(name, duration) {\n  if (typeof name === 'string') return Note.fromString(name, duration);else return new Note(name, duration);\n}\n\nnoteConstructor.fromString = Note.fromString;\nnoteConstructor.fromKey = Note.fromKey;\nnoteConstructor.fromFrequency = Note.fromFrequency;\nnoteConstructor.fromMIDI = Note.fromMIDI;\n\nfunction chordConstructor(name, symbol) {\n  if (typeof name === 'string') {\n    var root, octave;\n    root = name.match(/^([a-h])(x|#|bb|b?)/i);\n\n    if (root && root[0]) {\n      octave = typeof symbol === 'number' ? symbol.toString(10) : '4';\n      return new Chord(Note.fromString(root[0].toLowerCase() + octave), name.substr(root[0].length));\n    }\n  } else if (name instanceof Note) return new Chord(name, symbol);\n\n  throw new Error('Invalid Chord. Couldn\\'t find note name');\n}\n\nfunction scaleConstructor(tonic, scale) {\n  tonic = tonic instanceof Note ? tonic : teoria.note(tonic);\n  return new Scale(tonic, scale);\n}\n\nvar teoria = {\n  note: noteConstructor,\n  chord: chordConstructor,\n  interval: intervalConstructor,\n  scale: scaleConstructor,\n  Note: Note,\n  Chord: Chord,\n  Scale: Scale,\n  Interval: Interval\n};\n\nrequire('./lib/sugar')(teoria);\n\nexports = module.exports = teoria;","map":{"version":3,"names":["Note","require","Interval","Chord","Scale","intervalConstructor","from","to","toCoord","between","Error","invert","noteConstructor","name","duration","fromString","fromKey","fromFrequency","fromMIDI","chordConstructor","symbol","root","octave","match","toString","toLowerCase","substr","length","scaleConstructor","tonic","scale","teoria","note","chord","interval","exports","module"],"sources":["/home/reyden-martin/Documents/Tech2/HUB/Sony CSL/SONY-CSL-PROJECT/node_modules/react-piano-roll/node_modules/teoria/index.js"],"sourcesContent":["var Note = require('./lib/note');\nvar Interval = require('./lib/interval');\nvar Chord = require('./lib/chord');\nvar Scale = require('./lib/scale');\n\n// never thought I would write this, but: Legacy support\nfunction intervalConstructor(from, to) {\n  // Construct a Interval object from string representation\n  if (typeof from === 'string')\n    return Interval.toCoord(from);\n\n  if (typeof to === 'string' && from instanceof Note)\n    return Interval.from(from, Interval.toCoord(to));\n\n  if (to instanceof Interval && from instanceof Note)\n    return Interval.from(from, to);\n\n  if (to instanceof Note && from instanceof Note)\n    return Interval.between(from, to);\n\n  throw new Error('Invalid parameters');\n}\n\nintervalConstructor.toCoord = Interval.toCoord;\nintervalConstructor.from = Interval.from;\nintervalConstructor.between = Interval.between;\nintervalConstructor.invert = Interval.invert;\n\nfunction noteConstructor(name, duration) {\n  if (typeof name === 'string')\n    return Note.fromString(name, duration);\n  else\n    return new Note(name, duration);\n}\n\nnoteConstructor.fromString = Note.fromString;\nnoteConstructor.fromKey = Note.fromKey;\nnoteConstructor.fromFrequency = Note.fromFrequency;\nnoteConstructor.fromMIDI = Note.fromMIDI;\n\nfunction chordConstructor(name, symbol) {\n  if (typeof name === 'string') {\n    var root, octave;\n    root = name.match(/^([a-h])(x|#|bb|b?)/i);\n    if (root && root[0]) {\n      octave = typeof symbol === 'number' ? symbol.toString(10) : '4';\n      return new Chord(Note.fromString(root[0].toLowerCase() + octave),\n                            name.substr(root[0].length));\n    }\n  } else if (name instanceof Note)\n    return new Chord(name, symbol);\n\n  throw new Error('Invalid Chord. Couldn\\'t find note name');\n}\n\nfunction scaleConstructor(tonic, scale) {\n  tonic = (tonic instanceof Note) ? tonic : teoria.note(tonic);\n  return new Scale(tonic, scale);\n}\n\nvar teoria = {\n  note: noteConstructor,\n\n  chord: chordConstructor,\n\n  interval: intervalConstructor,\n\n  scale: scaleConstructor,\n\n  Note: Note,\n  Chord: Chord,\n  Scale: Scale,\n  Interval: Interval\n};\n\nrequire('./lib/sugar')(teoria);\nexports = module.exports = teoria;\n"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,YAAD,CAAlB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,gBAAD,CAAtB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,aAAD,CAAnB;;AACA,IAAIG,KAAK,GAAGH,OAAO,CAAC,aAAD,CAAnB,C,CAEA;;;AACA,SAASI,mBAAT,CAA6BC,IAA7B,EAAmCC,EAAnC,EAAuC;EACrC;EACA,IAAI,OAAOD,IAAP,KAAgB,QAApB,EACE,OAAOJ,QAAQ,CAACM,OAAT,CAAiBF,IAAjB,CAAP;EAEF,IAAI,OAAOC,EAAP,KAAc,QAAd,IAA0BD,IAAI,YAAYN,IAA9C,EACE,OAAOE,QAAQ,CAACI,IAAT,CAAcA,IAAd,EAAoBJ,QAAQ,CAACM,OAAT,CAAiBD,EAAjB,CAApB,CAAP;EAEF,IAAIA,EAAE,YAAYL,QAAd,IAA0BI,IAAI,YAAYN,IAA9C,EACE,OAAOE,QAAQ,CAACI,IAAT,CAAcA,IAAd,EAAoBC,EAApB,CAAP;EAEF,IAAIA,EAAE,YAAYP,IAAd,IAAsBM,IAAI,YAAYN,IAA1C,EACE,OAAOE,QAAQ,CAACO,OAAT,CAAiBH,IAAjB,EAAuBC,EAAvB,CAAP;EAEF,MAAM,IAAIG,KAAJ,CAAU,oBAAV,CAAN;AACD;;AAEDL,mBAAmB,CAACG,OAApB,GAA8BN,QAAQ,CAACM,OAAvC;AACAH,mBAAmB,CAACC,IAApB,GAA2BJ,QAAQ,CAACI,IAApC;AACAD,mBAAmB,CAACI,OAApB,GAA8BP,QAAQ,CAACO,OAAvC;AACAJ,mBAAmB,CAACM,MAApB,GAA6BT,QAAQ,CAACS,MAAtC;;AAEA,SAASC,eAAT,CAAyBC,IAAzB,EAA+BC,QAA/B,EAAyC;EACvC,IAAI,OAAOD,IAAP,KAAgB,QAApB,EACE,OAAOb,IAAI,CAACe,UAAL,CAAgBF,IAAhB,EAAsBC,QAAtB,CAAP,CADF,KAGE,OAAO,IAAId,IAAJ,CAASa,IAAT,EAAeC,QAAf,CAAP;AACH;;AAEDF,eAAe,CAACG,UAAhB,GAA6Bf,IAAI,CAACe,UAAlC;AACAH,eAAe,CAACI,OAAhB,GAA0BhB,IAAI,CAACgB,OAA/B;AACAJ,eAAe,CAACK,aAAhB,GAAgCjB,IAAI,CAACiB,aAArC;AACAL,eAAe,CAACM,QAAhB,GAA2BlB,IAAI,CAACkB,QAAhC;;AAEA,SAASC,gBAAT,CAA0BN,IAA1B,EAAgCO,MAAhC,EAAwC;EACtC,IAAI,OAAOP,IAAP,KAAgB,QAApB,EAA8B;IAC5B,IAAIQ,IAAJ,EAAUC,MAAV;IACAD,IAAI,GAAGR,IAAI,CAACU,KAAL,CAAW,sBAAX,CAAP;;IACA,IAAIF,IAAI,IAAIA,IAAI,CAAC,CAAD,CAAhB,EAAqB;MACnBC,MAAM,GAAG,OAAOF,MAAP,KAAkB,QAAlB,GAA6BA,MAAM,CAACI,QAAP,CAAgB,EAAhB,CAA7B,GAAmD,GAA5D;MACA,OAAO,IAAIrB,KAAJ,CAAUH,IAAI,CAACe,UAAL,CAAgBM,IAAI,CAAC,CAAD,CAAJ,CAAQI,WAAR,KAAwBH,MAAxC,CAAV,EACeT,IAAI,CAACa,MAAL,CAAYL,IAAI,CAAC,CAAD,CAAJ,CAAQM,MAApB,CADf,CAAP;IAED;EACF,CARD,MAQO,IAAId,IAAI,YAAYb,IAApB,EACL,OAAO,IAAIG,KAAJ,CAAUU,IAAV,EAAgBO,MAAhB,CAAP;;EAEF,MAAM,IAAIV,KAAJ,CAAU,yCAAV,CAAN;AACD;;AAED,SAASkB,gBAAT,CAA0BC,KAA1B,EAAiCC,KAAjC,EAAwC;EACtCD,KAAK,GAAIA,KAAK,YAAY7B,IAAlB,GAA0B6B,KAA1B,GAAkCE,MAAM,CAACC,IAAP,CAAYH,KAAZ,CAA1C;EACA,OAAO,IAAIzB,KAAJ,CAAUyB,KAAV,EAAiBC,KAAjB,CAAP;AACD;;AAED,IAAIC,MAAM,GAAG;EACXC,IAAI,EAAEpB,eADK;EAGXqB,KAAK,EAAEd,gBAHI;EAKXe,QAAQ,EAAE7B,mBALC;EAOXyB,KAAK,EAAEF,gBAPI;EASX5B,IAAI,EAAEA,IATK;EAUXG,KAAK,EAAEA,KAVI;EAWXC,KAAK,EAAEA,KAXI;EAYXF,QAAQ,EAAEA;AAZC,CAAb;;AAeAD,OAAO,CAAC,aAAD,CAAP,CAAuB8B,MAAvB;;AACAI,OAAO,GAAGC,MAAM,CAACD,OAAP,GAAiBJ,MAA3B"},"metadata":{},"sourceType":"script"}