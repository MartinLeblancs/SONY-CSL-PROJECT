{"ast":null,"code":"/**\n * Mixins functionality to make an object have \"plugins\".\n *\n * @mixin\n * @memberof PIXI.utils\n * @param obj {object} The object to mix into.\n * @example\n *      function MyObject() {}\n *\n *      pluginTarget.mixin(MyObject);\n */\nfunction pluginTarget(obj) {\n  obj.__plugins = {};\n  /**\n   * Adds a plugin to an object\n   *\n   * @param pluginName {string} The events that should be listed.\n   * @param ctor {Object} ?? @alvin\n   */\n\n  obj.registerPlugin = function (pluginName, ctor) {\n    obj.__plugins[pluginName] = ctor;\n  };\n  /**\n   * Instantiates all the plugins of this object\n   *\n   */\n\n\n  obj.prototype.initPlugins = function () {\n    this.plugins = this.plugins || {};\n\n    for (var o in obj.__plugins) {\n      this.plugins[o] = new obj.__plugins[o](this);\n    }\n  };\n  /**\n   * Removes all the plugins of this object\n   *\n   */\n\n\n  obj.prototype.destroyPlugins = function () {\n    for (var o in this.plugins) {\n      this.plugins[o].destroy();\n      this.plugins[o] = null;\n    }\n\n    this.plugins = null;\n  };\n}\n\nmodule.exports = {\n  /**\n   * Mixes in the properties of the pluginTarget into another object\n   *\n   * @param object {object} The obj to mix into\n   */\n  mixin: function mixin(obj) {\n    pluginTarget(obj);\n  }\n};","map":{"version":3,"names":["pluginTarget","obj","__plugins","registerPlugin","pluginName","ctor","prototype","initPlugins","plugins","o","destroyPlugins","destroy","module","exports","mixin"],"sources":["/home/reyden-martin/Documents/Tech2/HUB/Sony CSL/SONY-CSL-PROJECT/node_modules/react-piano-roll/node_modules/pixi.js/src/core/utils/pluginTarget.js"],"sourcesContent":["/**\n * Mixins functionality to make an object have \"plugins\".\n *\n * @mixin\n * @memberof PIXI.utils\n * @param obj {object} The object to mix into.\n * @example\n *      function MyObject() {}\n *\n *      pluginTarget.mixin(MyObject);\n */\nfunction pluginTarget(obj)\n{\n    obj.__plugins = {};\n\n    /**\n     * Adds a plugin to an object\n     *\n     * @param pluginName {string} The events that should be listed.\n     * @param ctor {Object} ?? @alvin\n     */\n    obj.registerPlugin = function (pluginName, ctor)\n    {\n        obj.__plugins[pluginName] = ctor;\n    };\n\n    /**\n     * Instantiates all the plugins of this object\n     *\n     */\n    obj.prototype.initPlugins = function ()\n    {\n        this.plugins = this.plugins || {};\n\n        for (var o in obj.__plugins)\n        {\n            this.plugins[o] = new (obj.__plugins[o])(this);\n        }\n    };\n\n    /**\n     * Removes all the plugins of this object\n     *\n     */\n    obj.prototype.destroyPlugins = function ()\n    {\n        for (var o in this.plugins)\n        {\n            this.plugins[o].destroy();\n            this.plugins[o] = null;\n        }\n\n        this.plugins = null;\n    };\n}\n\n\nmodule.exports = {\n    /**\n     * Mixes in the properties of the pluginTarget into another object\n     *\n     * @param object {object} The obj to mix into\n     */\n    mixin: function mixin(obj)\n    {\n        pluginTarget(obj);\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAT,CAAsBC,GAAtB,EACA;EACIA,GAAG,CAACC,SAAJ,GAAgB,EAAhB;EAEA;AACJ;AACA;AACA;AACA;AACA;;EACID,GAAG,CAACE,cAAJ,GAAqB,UAAUC,UAAV,EAAsBC,IAAtB,EACrB;IACIJ,GAAG,CAACC,SAAJ,CAAcE,UAAd,IAA4BC,IAA5B;EACH,CAHD;EAKA;AACJ;AACA;AACA;;;EACIJ,GAAG,CAACK,SAAJ,CAAcC,WAAd,GAA4B,YAC5B;IACI,KAAKC,OAAL,GAAe,KAAKA,OAAL,IAAgB,EAA/B;;IAEA,KAAK,IAAIC,CAAT,IAAcR,GAAG,CAACC,SAAlB,EACA;MACI,KAAKM,OAAL,CAAaC,CAAb,IAAkB,IAAKR,GAAG,CAACC,SAAJ,CAAcO,CAAd,CAAL,CAAuB,IAAvB,CAAlB;IACH;EACJ,CARD;EAUA;AACJ;AACA;AACA;;;EACIR,GAAG,CAACK,SAAJ,CAAcI,cAAd,GAA+B,YAC/B;IACI,KAAK,IAAID,CAAT,IAAc,KAAKD,OAAnB,EACA;MACI,KAAKA,OAAL,CAAaC,CAAb,EAAgBE,OAAhB;MACA,KAAKH,OAAL,CAAaC,CAAb,IAAkB,IAAlB;IACH;;IAED,KAAKD,OAAL,GAAe,IAAf;EACH,CATD;AAUH;;AAGDI,MAAM,CAACC,OAAP,GAAiB;EACb;AACJ;AACA;AACA;AACA;EACIC,KAAK,EAAE,SAASA,KAAT,CAAeb,GAAf,EACP;IACID,YAAY,CAACC,GAAD,CAAZ;EACH;AATY,CAAjB"},"metadata":{},"sourceType":"script"}